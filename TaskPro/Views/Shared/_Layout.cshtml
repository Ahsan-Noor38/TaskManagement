@using System.Security.Claims
@using TaskPro.Helper
@{
    var currentDate = DateTime.UtcNow.Date;
    var username = string.Empty;
    var userRole = string.Empty;
    @if (User.Identity.IsAuthenticated)
    {
        userRole = User.Claims.Where(s => s.Type is "role" or ClaimTypes.Role).FirstOrDefault()?.Value;
        username = User.FindFirst(ClaimTypes.GivenName)?.Value;
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>TaskPro</title>
    <link href="https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/style.min.css" rel="stylesheet" />
    <link href="/Admin/css/styles.css" rel="stylesheet" />
    <script src="https://use.fontawesome.com/releases/v6.3.0/js/all.js" crossorigin="anonymous"></script>
</head>
<body class="sb-nav-fixed">
    <nav class="sb-topnav navbar navbar-expand navbar-dark bg-dark">
        <!-- Navbar Brand-->
        <a class="navbar-brand ps-3" href="/Home/Index">TaskPro</a>
        <!-- Sidebar Toggle-->
        <button class="btn btn-link btn-sm order-1 order-lg-0 me-4 me-lg-0" id="sidebarToggle" href="#!"><i class="fas fa-bars"></i></button>
        <!-- Navbar Search-->
        <form class="d-none d-md-inline-block form-inline ms-auto me-0 me-md-3 my-2 my-md-0">
            <div class="input-group">
                <input hidden class="form-control" type="text" placeholder="Search for..." aria-label="Search for..." aria-describedby="btnNavbarSearch" />
                <button hidden class="btn btn-primary" id="btnNavbarSearch" type="button"><i class="fas fa-search"></i></button>
            </div>
        </form>
        <!-- Navbar-->
        <ul class="navbar-nav ms-auto ms-md-0 me-3 me-lg-4">
            <li class="nav-item dropdown" id="notificationDropdown">
                <a class="nav-link dropdown-toggle" href="#" id="notifDropdown" role="button"
                   data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-bell"></i>
                    <span id="notifCount" class="badge bg-danger badge-sm" style="display:none;"></span>
                </a>
                <ul class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="notifDropdown" style="min-width: 300px;">
                    <li id="notifList">
                        <span class="dropdown-item text-muted">Loading...</span>
                    </li>
                </ul>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" id="navbarDropdown" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false"><i class="fas fa-user fa-fw"></i></a>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                    <li><hr class="dropdown-divider" /></li>
                    <form asp-controller="Home" asp-action="Logout" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="dropdown-item">Logout</button>
                    </form>
                </ul>
            </li>
        </ul>
    </nav>
    <div id="layoutSidenav">
        <div id="layoutSidenav_nav">
            <nav class="sb-sidenav accordion sb-sidenav-dark" id="sidenavAccordion">
                <div class="sb-sidenav-menu">
                    <div class="nav">
                        <div class="sb-sidenav-menu-heading">Core</div>
                        <a class="nav-link" href="/Home/Index">
                            <div class="sb-nav-link-icon"><i class="fas fa-tachometer-alt"></i></div>
                            Dashboard
                        </a>
                        @if (User.IsInRole(StaticDetails.Roles.Admin))
                        {
                            <div class="sb-sidenav-menu-heading">User Management</div>
                            <a class="nav-link" href="/Roles/Index">
                                <div class="sb-nav-link-icon"><i class="fas fa-users"></i></div>
                                Roles
                            </a>
                            <a class="nav-link" href="/Users/Index">
                                <div class="sb-nav-link-icon"><i class="fas fa-users"></i></div>
                                Users
                            </a>
                        }
                        <div class="sb-sidenav-menu-heading">Task Management</div>
                        <a class="nav-link" href="/Tasks/Index">
                            <div class="sb-nav-link-icon"><i class="fas fa-chart-area"></i></div>
                            Tasks
                        </a>
                        <div class="sb-sidenav-menu-heading">Reports</div>

                        <a class="nav-link" href="/Reports/TaskReport">
                            <div class="sb-nav-link-icon"><i class="fas fa-chart-area"></i></div>
                            Reports
                        </a>
                    </div>
                </div>
                <div class="sb-sidenav-footer" style="color:white">
                    <div class="small">Logged in as : @userRole</div>
                    @username
                </div>
            </nav>
        </div>
        <div id="layoutSidenav_content">
            <main>
                @RenderBody()
            </main>
            <footer class="py-4 bg-light mt-auto">
                <div class="container-fluid px-4">
                    <div class="d-flex align-items-center justify-content-between small">
                        <div>Copyright &copy; TaskPro @DateTime.Now.Year</div>
                        <div>
                            <span class="text-decoration-underline text-primary"
                                  data-bs-toggle="tooltip"
                                  title="We respect your privacy and keep your data safe.">
                                Privacy Policy
                            </span>
                            &middot;
                            <span class="text-decoration-underline text-primary"
                                  data-bs-toggle="tooltip"
                                  title="These are the terms and conditions for using TaskPro.">
                                Terms &amp; Conditions
                            </span>
                        </div>
                    </div>
                </div>
            </footer>
        </div>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            tooltipTriggerList.map(function (el) {
                return new bootstrap.Tooltip(el)
            })
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    <script src="/Admin/js/scripts.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js" crossorigin="anonymous"></script>
   @*  <script src="/Admin/assets/demo/chart-area-demo.js"></script>
    <script src="/Admin/assets/demo/chart-bar-demo.js"></script> *@
    <script src="https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/umd/simple-datatables.min.js" crossorigin="anonymous"></script>
    <script src="/Admin/js/datatables-simple-demo.js"></script>
    @RenderSection("Scripts", required: false)
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            loadNotifications();

            // Load notifications
            function loadNotifications() {
                fetch('/Home/GetAllNotifications') // Your NotificationController action
                    .then(response => response.json())
                    .then(data => {
                        const notifList = document.getElementById("notifList");
                        const notifCount = document.getElementById("notifCount");

                        notifList.innerHTML = "";

                        if (!data || data.length === 0) {
                            notifList.innerHTML = '<span class="dropdown-item text-muted">No new notifications</span>';
                            notifCount.style.display = "none";
                        } else {
                               const today = new Date();
                                const newNotifs = data.filter(n => {
                                    const createdDate = new Date(n.createdAt);
                                    return createdDate.toDateString() === today.toDateString();
                                });

                                // Show "New" if there are notifications today, else show count
                                if (newNotifs.length > 0) {
                                    notifCount.innerText = "New";
                                notifCount.style.display = "inline-block";
                                }

                            data.forEach(n => {
                                let li = document.createElement("li");
                                li.innerHTML = `
                                    <a class="dropdown-item ${n.isRead ? 'text-muted small' : 'fw-bold small'}">
                                        ${n.message}
                                        <br />
                                        <small class="text-muted">
                                        ${new Date(n.createdAt).toLocaleString('en-US', {
                                            month: 'short',
                                            day: '2-digit',
                                            year: 'numeric',
                                            hour: '2-digit',
                                            minute: '2-digit'
                                        })}</small>
                                    </a>`;
                                notifList.appendChild(li);
                            });
                        }
                    });
            }

            // Mark notification as read
            window.markAsRead = function (id) {
                fetch(`/Notification/MarkAsRead?notificationId=${id}`, { method: "POST" });
            }
        });
    </script>
</body>
</html>


