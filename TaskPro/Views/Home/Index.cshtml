@{
    ViewData["Title"] = "Home Page";
}
<style>
     .chart-container {
         position: relative;
         height: 370px; /* same fixed height for both */
     }
</style>
<div class="container-fluid px-4">
    <h1 class="mt-4">Dashboard</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item active">Dashboard</li>
    </ol>

    <div class="row">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body">Pending Tasks: <strong>@ViewBag.PendingCount</strong></div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="/Tasks">View Details</a>
                    <div class="small text-white"><i class="fas fa-tasks"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-info text-white mb-4">
                <div class="card-body">In Progress: <strong>@ViewBag.InProgressCount</strong></div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="/Tasks">View Details</a>
                    <div class="small text-white"><i class="fas fa-spinner"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">Completed: <strong>@ViewBag.CompletedCount</strong></div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="/Tasks">View Details</a>
                    <div class="small text-white"><i class="fas fa-check-circle"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-danger text-white mb-4">
                <div class="card-body">Overdue: <strong>@ViewBag.OverdueCount</strong></div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="/Tasks">View Details</a>
                    <div class="small text-white"><i class="fas fa-exclamation-triangle"></i></div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Doughnut Chart -->
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-pie me-1"></i>
                    Users Overview
                </div>
                <div class="card-body chart-container">
                    <canvas id="roleChart"></canvas>
                </div>
            </div>
        </div>

        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-bar me-1"></i>
                    Task Counts
                </div>
                <div class="card-body chart-container">
                    <canvas id="taskBarChart"></canvas>
                </div>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-header">
                <h5>Tasks per User</h5>
            </div>
            <div class="card-body">
                <canvas id="tasksPerUserChart" style="height:300px;"></canvas>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Doughnut Chart
    var roleLabels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RoleLabels));
    var roleCounts = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RoleCounts));

    var ctx = document.getElementById('roleChart').getContext('2d');
    var roleChart = new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: roleLabels,
            datasets: [{
                label: 'Users by Role',
                data: roleCounts,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.6)',   // Admin
                    'rgba(54, 162, 235, 0.6)',   // Manager
                    'rgba(75, 192, 192, 0.6)'    // Member
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(75, 192, 192, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'bottom' },
                title: {
                    display: true,
                    text: 'User Role Distribution'
                }
            }
        }
    });

    // Bar Chart
    new Chart(document.getElementById('taskBarChart'), {
        type: 'bar',
        data: {
            labels: ['Pending', 'In Progress', 'Completed', 'Overdue'],
            datasets: [{
                label: 'Number of Tasks',
                data: [@ViewBag.PendingCount, @ViewBag.InProgressCount, @ViewBag.CompletedCount, @ViewBag.OverdueCount],
                backgroundColor: ['#ffc107', '#17a2b8', '#28a745', '#dc3545']
            }]
        }
    });
    //workload chart
    var ctx = document.getElementById('tasksPerUserChart').getContext('2d');
    var chart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.TasksPerUserLabels)),
            datasets: [{
                label: 'Number of Tasks',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.TasksPerUserCounts)),
                backgroundColor: 'rgba(75, 192, 192, 0.6)',   // light green-teal
                borderColor: 'rgba(75, 192, 192, 1)',         // solid green-teal
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { display: false },
                title: { display: true, text: 'Workload Distribution' }
            },
            scales: {
                y: { beginAtZero: true }
            }
        }
    });
</script>
