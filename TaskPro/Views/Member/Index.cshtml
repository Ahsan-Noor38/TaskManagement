@model MemberTasksViewModel
@{
    Layout = "_LayoutMember";
}

<style>
    .filter-form {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        align-items: flex-end;
        padding: 1rem;
        background: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    }

    .filter-group {
        display: flex;
        flex-direction: column;
    }

    /* For inline label + dropdown (Priority, Status) */
    .filter-inline {
        flex-direction: row;
        align-items: center;
        gap: 0.5rem;
    }

    .filter-label {
        font-weight: 500;
        font-size: 0.9rem;
        margin-bottom: 0.25rem;
        white-space: nowrap;
    }

    .filter-inline .filter-label {
        margin-bottom: 0;
    }

    select, input {
        min-width: 160px;
    }
    .thumb-sm {
        height: 36px;
        width: 36px;
    }

    .card-box {
        padding: 20px;
        border-radius: 3px;
        margin-bottom: 30px;
        background-color: #fff;
    }

    taskList {
        min-height: 40px;
        margin-bottom: 0
    }

    .taskList li {
        background-color: #fff;
        border: 1px solid rgba(121, 121, 121, .2);
        padding: 10px;
        margin-bottom: 20px;
        border-radius: 3px
    }

        .taskList li:last-of-type {
            margin-bottom: 0
        }

    .taskList a {
        font-size: 13px
    }

    .taskList .checkbox {
        margin-left: 20px;
        margin-top: 5px
    }

    .text-muted {
        color: #98a6ad !important;
    }
</style>

<div class="content">
    <div class="container">
        <div class="row">

            <form method="get" asp-action="Index" class="filter-form mb-4">

                <!-- Priority -->
                <div class="filter-group">
                    <label class="filter-label">Priority</label>
                    <select name="priority" class="form-control">
                        <option value="">-- All --</option>
                        @foreach (var p in System.Enum.GetValues(typeof(TaskPro.Models.Enum.TaskPriority)))
                        {
                            var t = @ViewContext.HttpContext.Request.Query["priority"] == p.ToString();
                            if (t)
                            {
                                <option value="@p" selected>@p</option>
                            }
                            else
                            {
                                <option value="@p">@p</option>
                            }
                        }
                    </select>
                </div>

                <!-- Status -->
                <div class="filter-group">
                    <label class="filter-label">Status</label>
                    <select name="status" class="form-control">
                        <option value="">-- All --</option>
                        @foreach (var s in System.Enum.GetValues(typeof(TaskPro.Models.Enum.TaskStatus)))
                        {
                            var t = @ViewContext.HttpContext.Request.Query["status"] == s.ToString();
                            if (t)
                            {
                                <option value="@s" selected>@s</option>
                            }
                            else
                            {
                                <option value="@s">@s</option>
                            }
                        }
                    </select>
                </div>

                <!-- Search -->
                <div class="filter-group">
                    <label class="filter-label">Search</label>
                    <input type="text" name="search" class="form-control"
                           value="@ViewContext.HttpContext.Request.Query["search"]"
                           placeholder="Search task title..." />
                </div>

                <!-- From Date -->
                <div class="filter-group">
                    <label class="filter-label">From Deadline</label>
                    <input type="date" name="fromDate" class="form-control"
                           value="@ViewContext.HttpContext.Request.Query["fromDate"]" />
                </div>

                <!-- To Date -->
                <div class="filter-group">
                    <label class="filter-label">To Deadline</label>
                    <input type="date" name="toDate" class="form-control"
                           value="@ViewContext.HttpContext.Request.Query["toDate"]" />
                </div>

                <!-- Buttons -->
                <div>
                    <button type="submit" class="btn btn-primary btn-sm">Apply</button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-sm">Clear</a>
                </div>
            </form>
            <!-- Upcoming Tasks -->
            <div class="col-lg-4">
                <div class="card-box">
                    <h4 class="text-dark header-title">ToDo</h4>
                    <p class="text-muted m-b-30 font-13">
                        This is your to-do list for tasks that will begin soon.
                        Use this space to prepare in advance and ensure you have everything you need.

                    </p>
                    <ul class="sortable-list taskList list-unstyled ui-sortable" id="upcoming">
                        <!-- To Do -->
                        @if (!Model.UpcomingTasks.Any())
                        {
                            <div class="alert alert-secondary text-center shadow-sm" role="alert" style="font-size: 1.1rem;">
                                <i class="fas fa-tasks fa-lg me-2"></i>
                                No tasks to do — enjoy the break! 🎉
                            </div>
                        }
                        @foreach (var item in Model.UpcomingTasks)
                        {
                            <li class="task-warning ui-sortable-handle" id="task1">
                                <div class="checkbox checkbox-custom checkbox-single float-right">
                                    <div class="float-right">
                                        @if (item.Task.Priority == (int)TaskPro.Models.Enum.TaskPriority.High)
                                        {
                                            <span class="badge badge-danger">High</span>
                                        }
                                        else if (item.Task.Priority == (int)TaskPro.Models.Enum.TaskPriority.Medium)
                                        {
                                            <span class="badge badge-warning text-dark">Medium</span>
                                        }
                                        else if (item.Task.Priority == (int)TaskPro.Models.Enum.TaskPriority.Low)
                                        {
                                            <span class="badge badge-success">Low</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-secondary">N/A</span>
                                        }
                                    </div>
                                    <label></label>
                                </div>
                                @item.Task.Title
                                <div class="clearfix"></div>
                                <div class="mt-3">
                                    <p class="float-right mb-0 mt-2">
                                        <a href="@Url.Action("TaskDetail", "Member", new { id = item.Id })"
                                           class="btn btn-success btn-sm waves-effect waves-light">
                                            View Details
                                        </a>
                                    </p>
                                    <p class="mb-0 text-muted d-flex align-items-center">
                                        <img src="~/Admin/default-avatar.png" alt="task-user" class="thumb-sm rounded-circle mr-2">
                                        <span>
                                            <span class="font-bold font-secondary">@item.Task.CreatedByNavigation.FullName</span><br />
                                            <small class="text-secondary text-muted">Created by</small>
                                        </span>
                                    </p>
                                </div>
                            </li>
                        }

                    </ul>

                </div>
            </div>

            <!-- In Progress Tasks -->
            <div class="col-lg-4">
                <div class="card-box">
                    <h4 class="text-dark header-title">In Progress</h4>
                    <p class="text-muted m-b-30 font-13">
                        Tasks you are currently working on.
                        Keep these updated so the team can track progress.
                        Remember to mark milestones and communicate any blockers promptly.
                    </p>
                    <ul class="sortable-list taskList list-unstyled ui-sortable" id="inprogress">
                        <!-- In Progress -->
                        @if (!Model.InProgressTasks.Any())
                        {
                            <div class="alert alert-warning text-center shadow-sm" role="alert" style="font-size: 1.1rem;">
                                <i class="fas fa-spinner fa-spin fa-lg me-2"></i>
                                No tasks in progress — time to start one! ⏳
                            </div>
                        }
                        @foreach (var item in Model.InProgressTasks)
                        {
                            <li id="task9" class="ui-sortable-handle">
                                <div class="checkbox checkbox-custom checkbox-single float-right">
                                    <div class="float-right">
                                        @if (item.Task.Priority == (int)TaskPro.Models.Enum.TaskPriority.High)
                                        {
                                            <span class="badge badge-danger">High</span>
                                        }
                                        else if (item.Task.Priority == (int)TaskPro.Models.Enum.TaskPriority.Medium)
                                        {
                                            <span class="badge badge-warning text-dark">Medium</span>
                                        }
                                        else if (item.Task.Priority == (int)TaskPro.Models.Enum.TaskPriority.Low)
                                        {
                                            <span class="badge badge-success">Low</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-secondary">N/A</span>
                                        }
                                    </div>
                                    <label></label>
                                </div>
                                @item.Task.Title
                                <div class="clearfix"></div>
                                <div class="mt-3">
                                    <p class="float-right mb-0 mt-2">
                                        <a href="@Url.Action("TaskDetail", "Member", new { id = item.Id })"
                                           class="btn btn-success btn-sm waves-effect waves-light">
                                            View Details
                                        </a>
                                    </p>
                                    <p class="mb-0 text-muted d-flex align-items-center">
                                        <img src="~/Admin/default-avatar.png" alt="task-user" class="thumb-sm rounded-circle mr-2">
                                        <span>
                                            <span class="font-bold font-secondary">@item.Task.CreatedByNavigation.FullName</span><br />
                                            <small class="text-secondary text-muted">Created by</small>
                                        </span>
                                    </p>
                                </div>
                            </li>
                        }

                    </ul>
                </div>
            </div>

            <!-- Completed Tasks -->
            <div class="col-lg-4">
                <div class="card-box">
                    <h4 class="text-dark header-title">Completed</h4>
                    <p class="text-muted m-b-30 font-13">
                        Tasks that have been finished.
                        Keep this list as a record of accomplishments.
                        Reviewing completed work helps improve future project efficiency.
                    </p>
                    <ul class="sortable-list taskList list-unstyled ui-sortable" id="completed">
                        @if (!Model.CompletedTasks.Any())
                        {
                            <div class="alert alert-info text-center shadow-sm" role="alert" style="font-size: 1.1rem;">
                                <i class="fas fa-check-circle fa-lg me-2"></i>
                                No tasks completed yet — keep going! 🚀
                            </div>
                        }
                        @foreach (var item in Model.CompletedTasks)
                        {
                            <li class="task-warning ui-sortable-handle" id="task14">
                                <div class="checkbox checkbox-custom checkbox-single float-right">
                                    <div class="float-right">
                                        @if (item.Task.Priority == (int)TaskPro.Models.Enum.TaskPriority.High)
                                        {
                                            <span class="badge badge-danger">High</span>
                                        }
                                        else if (item.Task.Priority == (int)TaskPro.Models.Enum.TaskPriority.Medium)
                                        {
                                            <span class="badge badge-warning text-dark">Medium</span>
                                        }
                                        else if (item.Task.Priority == (int)TaskPro.Models.Enum.TaskPriority.Low)
                                        {
                                            <span class="badge badge-success">Low</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-secondary">N/A</span>
                                        }
                                    </div>
                                    <label></label>
                                </div>
                                @item.Task.Title
                                <div class="clearfix"></div>
                                <div class="mt-3">
                                    <p class="float-right mb-0 mt-2">
                                        <a href="@Url.Action("TaskDetail", "Member", new { id = item.Id })"
                                           class="btn btn-success btn-sm waves-effect waves-light">
                                            View Details
                                        </a>
                                    </p>
                                    <p class="mb-0 text-muted d-flex align-items-center">
                                        <img src="~/Admin/default-avatar.png" alt="task-user" class="thumb-sm rounded-circle mr-2">
                                        <span>
                                            <span class="font-bold font-secondary">@item.Task.CreatedByNavigation.FullName</span><br />
                                            <small class="text-secondary text-muted">Created by</small>
                                        </span>
                                    </p>
                                </div>
                            </li>
                        }

                    </ul>
                </div>
            </div>
        </div>
        <!-- end row -->
    </div>
    <!-- container -->
</div>
