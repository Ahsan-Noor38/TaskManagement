@using static TaskPro.Models.Enum
@model IEnumerable<TaskPro.Models.Task>

@{
    ViewData["Title"] = "Index";
    var taskUsage = ViewBag.TaskUsage as Dictionary<int, bool>;
}

<div class="container-fluid px-4 mt-5">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <p class="mb-0">
            <a class="btn btn-dark" asp-action="Create">Create New</a>
        </p>

        <!-- Status Filter -->
        <form method="get" asp-action="Index" class="mb-0">
            <div>
                <b>Status Filter</b>
                <select name="statusFilter" class="form-control" onchange="this.form.submit()">
                    <option value="">-- All --</option>
                    @foreach (var s in System.Enum.GetValues(typeof(TaskPro.Models.Enum.TaskStatus)))
                    {
                        var isSelected = ViewBag.StatusFilter != null && ViewBag.StatusFilter.ToString() == s.ToString();
                        if (isSelected)
                        {
                            <option value="@s" selected>@s</option>
                        }
                        else
                        {
                            <option value="@s">@s</option>
                        }
                    }
                </select>
                <!-- Overdue Filter Form -->
                <div class="form-check ms-2">
                    <input type="checkbox"
                           class="form-check-input"
                           id="overdueCheckbox"
                           name="isOverdue"
                           value="true"
                           onchange="this.form.submit()"
                           @(ViewBag.IsOverdue == true ? "checked" : "") />
                    <label class="form-check-label" for="overdueCheckbox">Overdue</label>
                </div>
            </div>
        </form>
    </div>
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Tasks
        </div>
        <div class="card-body">
            <table id="datatablesSimple">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Priority)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Deadline)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.CreatedAt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CreatedBy)
                        </th>

                        <th>
                            Status
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @((TaskPriority)item.Priority)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Deadline)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreatedAt)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreatedByNavigation.FullName)
                            </td>
                            <td>
                                @{
                                    var status = item.TaskAssignments
                                    .SelectMany(t => t.TaskUpdates)
                                    .Select(u => u.Status)
                                    .ToList();

                                    TaskPro.Models.Enum.TaskStatus overallStatus;
                                    if (status.All(s => s == (int)TaskPro.Models.Enum.TaskStatus.Pending))
                                    {
                                        overallStatus = TaskPro.Models.Enum.TaskStatus.Pending;
                                    }
                                    else if (status.All(s => s == (int)TaskPro.Models.Enum.TaskStatus.Completed))
                                    {
                                        overallStatus = TaskPro.Models.Enum.TaskStatus.Completed;
                                    }
                                    else
                                    {
                                        overallStatus = TaskPro.Models.Enum.TaskStatus.InProgress;
                                    }

                                    @overallStatus
                                }
                            </td>
                            <td>
                                <a class="btn btn-dark btn-sm" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                <a class="btn btn-secondary btn-sm" href="/TaskAssignment/TaskDetails/@item.Id">Task Details</a> |
                                @if (taskUsage.ContainsKey(item.Id) && taskUsage[item.Id])
                                {
                                    <button class="btn btn-danger btn-sm" disabled>Delete</button>
                                }
                                else
                                {
                                    <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>